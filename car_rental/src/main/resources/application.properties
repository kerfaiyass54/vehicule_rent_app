spring.application.name=car_rental

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/vehiculerents?currentSchema=public
spring.datasource.username=postgres
spring.datasource.password=krkrfrang
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=8100

spring.security.oauth2.client.registration.keycloak.client-id=vehicule-app-realm
spring.security.oauth2.client.registration.keycloak.client-secret=OgUbIf3JPhBuc4UHTIf0SuzLss3uNkTQ
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/auth/realms/myrealm



