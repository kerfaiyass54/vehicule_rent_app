-- Table: public.admin

-- DROP TABLE IF EXISTS public.admin;

CREATE TABLE IF NOT EXISTS public.admin
(
    idadmin bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    admin_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email_admin character varying(255) COLLATE pg_catalog."default" NOT NULL,
    pass_admin character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_user character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT admin_pkey PRIMARY KEY (idadmin)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.admin
    OWNER to postgres;


-- Table: public.adress

-- DROP TABLE IF EXISTS public.adress;

CREATE TABLE IF NOT EXISTS public.adress
(
    idadress bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    adress_status smallint NOT NULL,
    "number" integer NOT NULL,
    road character varying(255) COLLATE pg_catalog."default" NOT NULL,
    idloc bigint,
    idsupp bigint,
    surface numeric,
    CONSTRAINT adress_pkey PRIMARY KEY (idadress),
    CONSTRAINT fkgw7myd9rmrmro8uywe3hpwao8 FOREIGN KEY (idsupp)
    REFERENCES public.supplier (idsupp) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT fkjkmbtypc6u88odxspt5j8v3dc FOREIGN KEY (idloc)
    REFERENCES public.location (idloc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT adress_adress_status_check CHECK (adress_status >= 0 AND adress_status <= 1)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.adress
    OWNER to postgres;


-- Table: public.buyings

-- DROP TABLE IF EXISTS public.buyings;

CREATE TABLE IF NOT EXISTS public.buyings
(
    idbuying bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    buy_status character varying(255) COLLATE pg_catalog."default",
    date_buy timestamp(6) with time zone,
                              period_buy integer,
                              id_client bigint,
                              id_vehicule bigint,
                              renew boolean,
                              CONSTRAINT buyings_pkey PRIMARY KEY (idbuying),
    CONSTRAINT fk4391tv81rh4nypiov9eh7t9n5 FOREIGN KEY (id_vehicule)
    REFERENCES public.vehicule (idvehicule) MATCH SIMPLE
                          ON UPDATE NO ACTION
                          ON DELETE NO ACTION,
    CONSTRAINT fkjcr2ijw988vmekjlq3oh7lrk9 FOREIGN KEY (id_client)
    REFERENCES public.client (idclient) MATCH SIMPLE
                          ON UPDATE NO ACTION
                          ON DELETE NO ACTION,
    CONSTRAINT buyings_buy_status_check CHECK (buy_status::text = ANY (ARRAY['BEING_USED'::character varying, 'FINISHED'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.buyings
    OWNER to postgres;


-- Table: public.category

-- DROP TABLE IF EXISTS public.category;

CREATE TABLE IF NOT EXISTS public.category
(
    idcategory bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name_category character varying(255) COLLATE pg_catalog."default" NOT NULL,
    type_category character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_supp_cat bigint,
    stock integer,
    CONSTRAINT category_pkey PRIMARY KEY (idcategory),
    CONSTRAINT fktcof9f2tlhal0ahjbcbd8bi2d FOREIGN KEY (id_supp_cat)
    REFERENCES public.supplier (idsupp) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT category_name_category_check CHECK (name_category::text = ANY (ARRAY['PASSENGER_VEHICLES'::character varying, 'COMMERCIAL_VEHICLES'::character varying, 'MOTORCYCLES'::character varying, 'ELECTRIC_VEHICLES'::character varying, 'OFF_ROAD_VEHICLES'::character varying, 'HEAVY_DUTY_VEHICLES'::character varying, 'EMERGENCY_VEHICLES'::character varying, 'AGRICULTURAL_VEHICLES'::character varying, 'MARINE_VEHICLES'::character varying, 'AERIAL_VEHICLES'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.category
    OWNER to postgres;


-- Table: public.client

-- DROP TABLE IF EXISTS public.client;

CREATE TABLE IF NOT EXISTS public.client
(
    idclient bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    budget double precision,
    email_client character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name_client character varying(255) COLLATE pg_catalog."default",
    pass_client character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_user character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_admin_client bigint,
    id_location bigint,
    age integer,
    nationality character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT client_pkey PRIMARY KEY (idclient),
    CONSTRAINT fkgm99hbnlsngtjm2a2yd2pm6in FOREIGN KEY (id_location)
    REFERENCES public.location (idloc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT fkpco6t5iakp9u012kaxgukvt9r FOREIGN KEY (id_admin_client)
    REFERENCES public.admin (idadmin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.client
    OWNER to postgres;

-- Table: public.demand

-- DROP TABLE IF EXISTS public.demand;

CREATE TABLE IF NOT EXISTS public.demand
(
    iddemand bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date_ask timestamp(6) with time zone,
                              status_confirm character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    id_supp bigint,
    id_ticket bigint,
    id_vehicule_demand bigint,
    estimated_time integer NOT NULL,
    CONSTRAINT demand_pkey PRIMARY KEY (iddemand),
    CONSTRAINT fka85o80xacssikjq2klm19i1dy FOREIGN KEY (id_ticket)
    REFERENCES public.ticket (idticket) MATCH SIMPLE
                          ON UPDATE NO ACTION
                          ON DELETE NO ACTION,
    CONSTRAINT fkdhjfe6dov7heagegd0m17tawm FOREIGN KEY (id_vehicule_demand)
    REFERENCES public.vehicule (idvehicule) MATCH SIMPLE
                          ON UPDATE NO ACTION
                          ON DELETE NO ACTION,
    CONSTRAINT fke34gv3o843gxmavt9hrpeunmq FOREIGN KEY (id_supp)
    REFERENCES public.supplier (idsupp) MATCH SIMPLE
                          ON UPDATE NO ACTION
                          ON DELETE NO ACTION,
    CONSTRAINT demand_status_confirm_check CHECK (status_confirm::text = ANY (ARRAY['APPROVED'::character varying, 'REFUSED'::character varying, 'PENDING'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.demand
    OWNER to postgres;


-- Table: public.location

-- DROP TABLE IF EXISTS public.location;

CREATE TABLE IF NOT EXISTS public.location
(
    idloc bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    country character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    id_admin_loc bigint,
    "position" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT location_pkey PRIMARY KEY (idloc),
    CONSTRAINT fk6evnxkg6a32ie7royaymaxi7 FOREIGN KEY (id_admin_loc)
    REFERENCES public.admin (idadmin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.location
    OWNER to postgres;


-- Table: public.repair

-- DROP TABLE IF EXISTS public.repair;

CREATE TABLE IF NOT EXISTS public.repair
(
    idrepair bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email_repair character varying(255) COLLATE pg_catalog."default",
    name_repair character varying(255) COLLATE pg_catalog."default",
    pass_repair character varying(255) COLLATE pg_catalog."default",
    role_user character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_admin_rep bigint,
    id_location bigint,
    speciality character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT repair_pkey PRIMARY KEY (idrepair),
    CONSTRAINT fkmhvgcq858c4aeptw95ce4oxxg FOREIGN KEY (id_location)
    REFERENCES public.location (idloc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT fksybk7ddrmsakwm6gdx3pl264x FOREIGN KEY (id_admin_rep)
    REFERENCES public.admin (idadmin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.repair
    OWNER to postgres;

-- Table: public.repair_info

-- DROP TABLE IF EXISTS public.repair_info;

CREATE TABLE IF NOT EXISTS public.repair_info
(
    idinfo bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date_start timestamp(6) with time zone,
                                repair_status character varying(255) COLLATE pg_catalog."default",
    id_repair_repair bigint,
    id_vehicule_repair bigint,
    CONSTRAINT repair_info_pkey PRIMARY KEY (idinfo),
    CONSTRAINT fkclwoa6re6hfpxxck5wrqwtsw7 FOREIGN KEY (id_vehicule_repair)
    REFERENCES public.vehicule (idvehicule) MATCH SIMPLE
                            ON UPDATE NO ACTION
                            ON DELETE NO ACTION,
    CONSTRAINT fkpor4d5kkvmsnbblnysqy3l5r9 FOREIGN KEY (id_repair_repair)
    REFERENCES public.repair (idrepair) MATCH SIMPLE
                            ON UPDATE NO ACTION
                            ON DELETE NO ACTION,
    CONSTRAINT repair_info_repair_status_check CHECK (repair_status::text = ANY (ARRAY['PENDING_START'::character varying, 'FINISHED'::character varying, 'PENDING_FINISH'::character varying, 'CANCELLED'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.repair_info
    OWNER to postgres;


-- Table: public.subscription

-- DROP TABLE IF EXISTS public.subscription;

CREATE TABLE IF NOT EXISTS public.subscription
(
    idsubscrip bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date_start timestamp(6) with time zone,
                                price double precision,
                                reduce integer,
                                type character varying(255) COLLATE pg_catalog."default",
    id_client bigint,
    id_supplier bigint,
    CONSTRAINT subscription_pkey PRIMARY KEY (idsubscrip),
    CONSTRAINT fkb11lh81k3l44mxnmr1suhihlj FOREIGN KEY (id_client)
    REFERENCES public.client (idclient) MATCH SIMPLE
                            ON UPDATE NO ACTION
                            ON DELETE NO ACTION,
    CONSTRAINT fkbq1k20nkvir5w6ymrhb8vhwba FOREIGN KEY (id_supplier)
    REFERENCES public.supplier (idsupp) MATCH SIMPLE
                            ON UPDATE NO ACTION
                            ON DELETE NO ACTION,
    CONSTRAINT subscription_type_check CHECK (type::text = ANY (ARRAY['BASIC'::character varying, 'PREMIUM'::character varying, 'MONTHLY'::character varying, 'ANNUAL'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.subscription
    OWNER to postgres;


-- Table: public.supplier

-- DROP TABLE IF EXISTS public.supplier;

CREATE TABLE IF NOT EXISTS public.supplier
(
    idsupp bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email_supp character varying(255) COLLATE pg_catalog."default",
    nationality character varying(255) COLLATE pg_catalog."default",
    pass_supp character varying(255) COLLATE pg_catalog."default",
    role_user character varying(255) COLLATE pg_catalog."default" NOT NULL,
    supp_name character varying(255) COLLATE pg_catalog."default",
    id_admin_supp bigint,
    experience integer,
    CONSTRAINT supplier_pkey PRIMARY KEY (idsupp),
    CONSTRAINT fkleb1fyjsdksg0r40ywl6102wm FOREIGN KEY (id_admin_supp)
    REFERENCES public.admin (idadmin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.supplier
    OWNER to postgres;


-- Table: public.ticket

-- DROP TABLE IF EXISTS public.ticket;

CREATE TABLE IF NOT EXISTS public.ticket
(
    idticket bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date_insert timestamp(6) with time zone,
                                 status character varying(255) COLLATE pg_catalog."default",
    tarif real,
    type character varying(255) COLLATE pg_catalog."default",
    id_client bigint,
    id_rep bigint,
    id_vehicule_ticket bigint,
    description character varying(255) COLLATE pg_catalog."default",
    decription character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT ticket_pkey PRIMARY KEY (idticket),
    CONSTRAINT fk6bhd2ubred4s6lpn8eo7to8 FOREIGN KEY (id_vehicule_ticket)
    REFERENCES public.vehicule (idvehicule) MATCH SIMPLE
                             ON UPDATE NO ACTION
                             ON DELETE NO ACTION,
    CONSTRAINT fkgyc3k9uchupgjmtaciikgxoss FOREIGN KEY (id_client)
    REFERENCES public.client (idclient) MATCH SIMPLE
                             ON UPDATE NO ACTION
                             ON DELETE NO ACTION,
    CONSTRAINT fko4rd9io5orgwlgutowl7il7lc FOREIGN KEY (id_rep)
    REFERENCES public.repair (idrepair) MATCH SIMPLE
                             ON UPDATE NO ACTION
                             ON DELETE NO ACTION,
    CONSTRAINT ticket_status_check CHECK (status::text = ANY (ARRAY['ACCEPTED'::character varying, 'REJECTED'::character varying]::text[])),
    CONSTRAINT ticket_type_check CHECK (type::text = ANY (ARRAY['MODIFICATION'::character varying, 'REPARATION'::character varying, 'IMPROVEMENT'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.ticket
    OWNER to postgres;

-- Table: public.vehicule

-- DROP TABLE IF EXISTS public.vehicule;

CREATE TABLE IF NOT EXISTS public.vehicule
(
    idvehicule bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    brand character varying(255) COLLATE pg_catalog."default",
    color character varying(255) COLLATE pg_catalog."default",
    high_speed integer,
    name_vehicule character varying(255) COLLATE pg_catalog."default",
    price double precision,
    transmission character varying(255) COLLATE pg_catalog."default",
    vehicule_status character varying(255) COLLATE pg_catalog."default",
    id_category bigint,
    id_supp bigint,
    CONSTRAINT vehicule_pkey PRIMARY KEY (idvehicule),
    CONSTRAINT fk1l04l28ukx1n47va05dj245jt FOREIGN KEY (id_supp)
    REFERENCES public.supplier (idsupp) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT fkq1f3g5y67u43xnhvcxjmc7tdl FOREIGN KEY (id_category)
    REFERENCES public.category (idcategory) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT vehicule_transmission_check CHECK (transmission::text = ANY (ARRAY['MANUAL'::character varying, 'AUTOMATIC'::character varying]::text[])),
    CONSTRAINT vehicule_vehicule_status_check CHECK (vehicule_status::text = ANY (ARRAY['TAKEN'::character varying, 'AVAILABLE'::character varying, 'REPARATION'::character varying]::text[]))
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.vehicule
    OWNER to postgres;